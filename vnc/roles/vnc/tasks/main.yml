---
# tasks file for vnc

- name: Show the Hostname
  debug:
    msg: "Hostname is {{ ansible_hostname }} - {{ ansible_os_family }}"

- name: Show all of the available facts for this host.
  debug:
    var: ansible_facts

    #- name: Build dep
    #  apt:
    #    pkg: "kubuntu-desktop"
    #    state: build-dep

- name: Install Packages Part I
  apt:
    pkg: "{{ apt.pkgs_1 }}"
    autoclean: true
    autoremove: true
    cache_valid_time: 86400
    install_recommends: true
    update_cache: true
    state: "{{ apt.state }}"
    #state: latest
  become: true

- name: Install Packages Part II
  apt:
    pkg: "{{ apt.pkgs_2 }}"
    autoclean: true
    autoremove: true
    cache_valid_time: 86400
    install_recommends: true
    update_cache: true
    state: "{{ apt.state }}"
    #state: latest
  become: true

- name: Create the .vnc directory for vagrant
  file:
    path: "/home/{{ item }}/.vnc"
    state: "directory"
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: 00755
  loop:
    - vagrant
    - instructor

- name: Copy file with owner and permissions
  copy:
    src: files/passwd
    dest: /home/{{ item }}/.vnc/passwd
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: '0600'
  loop:
    - vagrant
    - instructor

# VNC Setup for Vagrant on port 5901
- name: Check the status of VNC
  command: ./check.sh
  register: check_output
  become_user: "vagrant"
  become: true
  ignore_errors: true

- name: Show all output fro the netstat command.
  debug:
    var: check_output.failed
  when: check_output.failed

- name: Start VNC service for vagrant on display :1
  script:
    cmd: /Armory/vnc/startserver.sh vagrant
    chdir: /home/vagrant
    executable: /bin/bash
  become: yes
  become_user: "vagrant"
  become: true
  when: check_output.failed

# VNC Setup for Instructor on port 5902
- name: Check the status of VNC
  command:
    cmd: ./check.sh
  register: check_output
  become_user: "instructor"
  become: true
  ignore_errors: true

- name: Show all output from the netstat command.
  debug:
    var: check_output
#  when: check_output.failed

- name: Start VNC service for vagrant on display :2
  shell: /Armory/vnc/startserver.sh instructor
  become: yes
  become_user: "instructor"
  when: check_output.failed

# VNC Setup for Student on port 5903
- name: Check the status of VNC
  command:
    cmd: ./check.sh
  register: check_output
  become_user: "student"
  become: true
  ignore_errors: true

- name: Show all output from the netstat command.
  debug:
    var: check_output
#  when: check_output.failed

- name: Start VNC service for vagrant on display :2
  shell: /Armory/vnc/startserver.sh student
  become: yes
  become_user: "student"
  when: check_output.failed

- name: CRON for VNC
  cron:
    name: "start_vnc"
    user: "root"
    special_time: "reboot"
    job: "/Armory/vnc/setup.sh"

- name: permit VNC
  command: "{{ item }}"
  become: yes
  loop:
    - 'firewall-cmd --add-port=5901/tcp'
    - 'firewall-cmd --add-port=5902/tcp'

