---

- name: Download Zip
  hosts: 127.0.0.1
  connection: local
  become: yes
  vars:
    dirs:
      - dir: /Downloads/Corpus
    links:
      - src: /Downloads/autopsy-4.19.1
        dest: /root/autopsy-files/autopsy-4.19.1
      - src: /Downloads/Corpus
        dest: /root/corpus
    pkgs:
      - testdisk
      - build-essential
      - autoconf
      - libtool
      - git-core
      - bellsoft-java8-full
    pkgs2:
      - imagemagick
      - libmagickcore-dev
      - libde265
      - libheif
    urls:
      - url: 'https://github.com/sleuthkit/autopsy/releases/download/autopsy-4.19.1/autopsy-4.19.1.zip'
        dest: '/Downloads/autopsy-4.19.1.zip'
      - url: 'http://downloads.digitalcorpora.org/corpora/scenarios/2012-ngdc/carry-phone/carry-phone-2012-07-15-final.zip'
        dest: "/Corpus/"

  tasks:

    - name: the list
      debug:
        msg: "{{ urls }}"

    - name: unflattened list
      debug:
        msg: "{{ item.url }}"
      loop:
        "{{ urls }}"

    - name: flattened list
      debug:
        msg: "{{ item.url }}"
      loop:
        "{{ urls | flatten(levels=1) }}"

    - name: Create a directories if they don't exist
      ansible.builtin.file:
        path: "{{ item.dir }}"
        state: directory
        mode: "{{ item.mode | default('0755') }}"
      loop:
        "{{ dirs }}"



    - name: Download
      get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest | default('/Downloads') }}"
        mode: "{{ item.mode | default('0440') }}"
      loop:
        "{{ urls }}"

    - name: Unarchive
      unarchive:
        src:  '/Downloads/autopsy-4.19.1.zip'
        dest: '/Downloads/'
        remote_src: yes
        creates: '/Downloads/autopsy-4.19.1'

    - name: Install DEB
      apt:
        deb: 'https://github.com/sleuthkit/sleuthkit/releases/download/sleuthkit-4.11.0/sleuthkit-java_4.11.0-1_amd64.deb'

    - name: Add an Apt signing key}, uses whichever key is at the URL
      ansible.builtin.apt_key:
        url: "https://download.bell-sw.com/pki/GPG-KEY-bellsoft"
        state: present

    - name: Add specified repository into sources list
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://apt.bell-sw.com/ stable main"
        state: present

    - name: Fix Sources
      replace:
        path: "/etc/apt/sources.list"
        regexp: "^# deb-src "
        replace: "deb-src "
        backup: yes

    - name: Install Dependencies
      apt:
        name: "{{ pkgs }}"
        state: present
        update_cache: yes

    - name: Build Dependencies
      apt:
        name: "{{pkgs2 }}"
        state: build-dep
#        update_cache: yes

    - name: Add an Apt signing key, uses whichever key is at the URL
      ansible.builtin.apt_key:
        url: "https://download.bell-sw.com/pki/GPG-KEY-bellsoft"
        state: present

    - name: Add specified repository into sources list
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://apt.bell-sw.com/ stable main"
        state: present

    - name: Update Profile
      lineinfile:
        path: "/etc/profile"
        line: "export JAVA_HOME=/usr/lib/jvm/bellsoft-java8-full-amd64"
        insertafter: EOF
        backup: yes

    - name: Run setup
      command: './unix_setup.sh'
      become: yes
      args:
        chdir: "/Downloads/autopsy-4.19.1"
      environment:
        JAVA_HOME: /usr/lib/jvm/bellsoft-java8-full-amd64
      ignore_errors: True
      register: results

    - name: debug
      debug:
        var: results

#    - name: Directories
#      file:
#        path: /root/autopsy-files
#        owner: root
#        group: root
#        mode: 0755
#        state: directory


    - name: setfacl
      acl:
        path: /root
        entity: vagrant
        etype: user
        permissions: x
        default: no
        state: present

    - name: Create a symbolic link
      ansible.builtin.file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ item.owner | default('root') }}"
        group: "{{ item.group | default('root') }}"
        state: link
      loop:
        "{{ links }}"